MEMORY {
    ZP:  start = $0000, size = $0100, type = rw;
    ROM: start = $D000, size = $1000, fill = yes, file = %O;
}

SEGMENTS {
    # Header consists of diagnostics magic byte, version number and diagnostics
    # ROM start.
    HEADER:     load = ROM, start = $D000, type = ro;

    # Core starts immediately afteer header.
    CODE:       load = ROM, start = $D008, type = ro;

    # Secondary processor's binary gets 256 bytes.
    SECONDARY:  load = ROM, start = $DD00, type = ro;

    # Data segment gets 506 bytes.
    DATA:       load = ROM, start = $DE00, type = ro;

    # Reset vectors (unused in this case, but for consistency with F000 ROM)
    VECTORS:    load = ROM, start = $DFFA, type = ro;
}