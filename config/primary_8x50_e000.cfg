MEMORY {
    ZP:  start = $0000, size = $0100, type = rw;
    ROM: start = $E000, size = $2000, fill = yes, fillval = $ff, file = %O;
}

SEGMENTS {
    # Header consists of diagnostics magic byte, version number and diagnostics
    # ROM start.
    HEADER:     load = ROM, start = $E000, type = ro;

    # Core starts immediately after header.
    CODE:       load = ROM, start = $E008, type = ro;

    # Secondary processor's binary gets 256 bytes.
    SECONDARY:  load = ROM, start = $FD00, type = ro;

    # Data segment gets 506 bytes.
    DATA:       load = ROM, start = $FE00, type = ro;

    # Reset vectors.
    VECTORS:    load = ROM, start = $FFFA, type = ro;
}